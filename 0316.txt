css 리셋

*css 우선순위*
id : css 선택자 우선순위 매우 높음.
class : 여러개 지정할 시에 뒤에 있는 것일수록 우선순위가 높다.

!important 우선순위가 가장 높다


* html 기본적인 css 가 존재한다
    => 아에 초기화를 하고 처음부터 다시 한다.

rem : root => body 태그의 폰트 사이즈가 1 rem이 된다.
em : 자신이 속해있는 부모 태그의 폰트 사이즈를 1em 으로 설정한다

vh : 내가 보고 있는 모니터의 전체 => 100vh

*다중선택자
    .box .red =>box 안에 있는 .red 에 접근하는 방법이다

* transition : 0.5x
* transform : translateX or Y(좌표 이동값)

display : block => 나머지 영역 가로 전체를 마진 처리한다.
display : inline-block => 컨텐츠 각각 하나에만 적용한다.

display : flex => 부모에게 적용하니 아래 자식들이 모두 inline-block 처리가 된다.(일괄처리)

flex-wrap : no wrap or wrap => 컨텐츠 고유의 크기 보존

* gap : 3rem => 요소와 요소와의 거리를 조정한다.


position
    relative  => 내가 원래 있어야할 위치에서 상태적으로 움직이게 한다.
                    top, left, bottom, right : 모두 padding 같이 밀어내는 개념임.

    absolute  => 내 상위 태그로 거슬러 올라가서 가장 먼저 찾는 relative 의 위치를 기준으로 삼는다. 없으면 body 까지 올라간다. (최종위치)
                    top, left, bottom, right : 절대적으로 다른 태그들은 무시하며 이동한다. 곂치게 된다.

    z-index  => z 축에 index 를 준다. 기본으로 주어지는 index는 0이다.

    fixed  => 스크롤을 움직여도 해당 위치에 고정되어 있는 기능이다.

convention
    class : 소문자와 -
    file name : 소문자와 _
    attribute value : ""으로 감싼다. ex) 깃허브가 "와 '를 다르게 인식하여 코드 리뷰시 바뀐 코드를 인지하기가 매우 어려워짐

    내가 쓸 태그들에 대한 설명을 주석으로 태그 앞에 적어 준다.

    head 태그 순서 : title, meta, link, scripts

    * css convention 검색해서 찾아보기
        정확한 명칭을 부여한다.
        css 속성의 순서를 반드시 지켜서 작업한다.(캡쳐해서 자주 확인하도록 하자!)
        * css 속성이름 작성시 html 태그 순서로 작성한다.
        

깃허브를 배포용으로만 쓴다고요 참고!!
